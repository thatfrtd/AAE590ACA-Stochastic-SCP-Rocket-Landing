
/*
Auto-generated by CVXPYgen on June 13, 2025 at 10:35:46.
Content: Function declarations.
*/

#include "cpg_workspace.h"

// Update user-defined parameter values
extern void cpg_update_Ak_0(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_0(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_0(cpg_int idx, cpg_float val);
extern void cpg_update_ck(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_1(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_1(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_1(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_2(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_2(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_2(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_3(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_3(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_3(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_4(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_4(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_4(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_5(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_5(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_5(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_6(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_6(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_6(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_7(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_7(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_7(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_8(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_8(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_8(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_9(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_9(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_9(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_10(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_10(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_10(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_11(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_11(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_11(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_12(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_12(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_12(cpg_int idx, cpg_float val);
extern void cpg_update_Ak_13(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_minus_13(cpg_int idx, cpg_float val);
extern void cpg_update_Bk_plus_13(cpg_int idx, cpg_float val);
extern void cpg_update_x_0(cpg_int idx, cpg_float val);
extern void cpg_update_x_ref(cpg_int idx, cpg_float val);
extern void cpg_update_u_ref(cpg_int idx, cpg_float val);

// Map user-defined to canonical parameters
extern void cpg_canonicalize_A();
extern void cpg_canonicalize_b();
extern void cpg_canonicalize_h();

// Retrieve primal solution in terms of user-defined variables
extern void cpg_retrieve_prim();

// Retrieve dual solution in terms of user-defined constraints
extern void cpg_retrieve_dual();

// Retrieve solver information
extern void cpg_retrieve_info();

// Copy canonical parameters for preconditioning
extern void cpg_copy_c();
extern void cpg_copy_A();
extern void cpg_copy_b();
extern void cpg_copy_G();
extern void cpg_copy_h();
extern void cpg_copy_all();

// Solve via canonicalization, canonical solve, retrieval
extern void cpg_solve();

// Update solver settings
extern void cpg_set_solver_default_settings();
extern void cpg_set_solver_max_iters(cpg_int max_iters_new);
extern void cpg_set_solver_bisect_iters(cpg_int bisect_iters_new);
extern void cpg_set_solver_ruiz_iters(cpg_int ruiz_iters_new);
extern void cpg_set_solver_iter_ref_iters(cpg_int iter_ref_iters_new);
extern void cpg_set_solver_kkt_static_reg(cpg_float kkt_static_reg_new);
extern void cpg_set_solver_kkt_dynamic_reg(cpg_float kkt_dynamic_reg_new);
extern void cpg_set_solver_abstol(cpg_float abstol_new);
extern void cpg_set_solver_reltol(cpg_float reltol_new);
extern void cpg_set_solver_abstol_inacc(cpg_float abstol_inacc_new);
extern void cpg_set_solver_reltol_inacc(cpg_float reltol_inacc_new);
extern void cpg_set_solver_verbose(cpg_int verbose_new);
